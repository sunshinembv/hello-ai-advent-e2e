name: OpenRouter Auth Smoke

on:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Check OPEN_ROUTER_API_KEY presence
        env:
          OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
        run: |
          set -euo pipefail
          if [ -z "${OPEN_ROUTER_API_KEY:-}" ]; then
            echo "‚õî Secret OPEN_ROUTER_API_KEY is NOT available to this workflow."
            exit 1
          fi
          echo "‚úÖ Secret OPEN_ROUTER_API_KEY is present."

      - name: Auth ping (accept 200 or 429; try primary+fallbacks)
        env:
          OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}
          LLM_MODEL: ${{ vars.LLM_MODEL }}
          LLM_FALLBACKS: ${{ vars.LLM_FALLBACKS }}
          REPO_URL: ${{ format('{0}/{1}', github.server_url, github.repository) }}
        run: |
          set -euo pipefail

          # –°–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –∫–ª—é—á–∞ (—É–±–∏—Ä–∞–µ–º CR/LF, –∫—Ä–∞—è, zero-width)
          cleaned="$(printf '%s' "${OPEN_ROUTER_API_KEY-}" \
            | tr -d '\r\n' \
            | sed -E 's/^[[:space:]"]+//; s/[[:space:]"]+$//' \
            | perl -CSDA -pe 's/\x{200B}|\x{200C}|\x{200D}|\x{FEFF}//g')"

          LEN="$(printf '%s' "$cleaned" | wc -c)"
          FP="$(printf '%s' "$cleaned" | sha256sum | cut -c1-8)"
          echo "API key length after sanitize: $LEN"
          echo "API key fingerprint: $FP"

          # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π: primary + fallbacks
          MODELS="${LLM_MODEL:-deepseek/deepseek-chat-v3-0324:free}"
          if [ -n "${LLM_FALLBACKS:-}" ]; then
            MODELS="$MODELS,${LLM_FALLBACKS}"
          else
            # —Ä–∞–∑—É–º–Ω—ã–π –¥–µ—Ñ–æ–ª—Ç —Ñ–æ–ª–ª–±—ç–∫–∞
            MODELS="$MODELS,deepseek/deepseek-r1:free"
          fi

          IFS=',' read -r -a arr <<< "$MODELS"
          ok=0
          for M in "${arr[@]}"; do
            M="$(echo "$M" | xargs)"
            [ -n "$M" ] || continue
            echo "‚Üí Trying model: $M"
            REQ=$(jq -n --arg m "$M" \
                   '{model:$m, messages:[{"role":"user","content":"ping"}], max_tokens:16, temperature:0.0}')
            RESP=$(curl -sS -w "\n%{http_code}" https://openrouter.ai/api/v1/chat/completions \
              -H "Authorization: Bearer ${cleaned}" \
              -H "Content-Type: application/json" \
              -H "HTTP-Referer: ${REPO_URL}" \
              -H "X-Title: OpenRouter Smoke" \
              -d "$REQ")

            BODY=$(printf '%s' "$RESP" | head -n -1)
            CODE=$(printf '%s' "$RESP" | tail -n 1)
            echo "HTTP: $CODE"
            echo "$BODY" | jq . 2>/dev/null || echo "$BODY"

            if [ "$CODE" -eq 200 ]; then
              OUT=$(echo "$BODY" | jq -r '.choices[0].message.content // empty')
              if [ -n "$OUT" ]; then
                echo "‚úÖ Auth OK via $M"
                ok=1; break
              fi
            elif [ "$CODE" -eq 429 ]; then
              echo "üü° Rate limited via $M ‚Äî auth OK (treat as success)."
              ok=1; break
            elif [ "$CODE" -eq 401 ]; then
              echo "‚ùå Unauthorized (401) ‚Äî –∫–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π/–ø—É—Å—Ç–æ–π."
              exit 1
            elif [ "$CODE" -eq 403 ]; then
              echo "‚ùå Forbidden (403). –ù–∞ –∫–ª—é—á–µ –≤–∫–ª—é—á–µ–Ω—ã 'Allowed sites'."
              echo "   –î–æ–±–∞–≤—å '${REPO_URL}' –∏–ª–∏ 'https://github.com' –≤ OpenRouter ‚Üí Settings ‚Üí API Keys ‚Üí Allowed sites."
              exit 1
            else
              echo "‚Ä¶ error with $M, trying next fallback"
            fi
          done

          if [ "$ok" -ne 1 ]; then
            echo "‚ùå No model succeeded (not 200/429)."
            exit 1
          fi